place_key = "AIzaSyCW6btatRC9nXwaMI06bgV5iHZbsX4H034"

shops_cord_ch = lapply(shops$location,geocode)

subway_distance = distHaversine(shops_cord_ch_df[,c('lon','lat')],closest_subway[,c('X2','X1')])

df = google_places(key = place_key,place_type = "subway_station",location = v,radius = 5000,rankby = "distance")

closest_subway = find_closest_subways(shops_cord_ch_df[,c("lat","lon")],place_key)

  find_closest_subways = function(coordinate_df,place_key){
    coordinate_df$lat_lon <- do.call(Map, c(f= c, unname(coordinate_df)))
    i = 1
    result_df = data.frame(matrix(,nrow=nrow(coordinate_df), ncol=2))
    for(v in coordinate_df$lat_lon){
      df = google_places(key = place_key,place_type = "subway_station",location = v,radius = 5000,rankby = "distance")
      if(!is.na(df$results$geometry$location$lat) && length(df$results$geometry$location$lat)>0){
      result_df[i,] = c(df$results$geometry$location$lat[1],df$results$geometry$location$lng[1])
      }
      i = i+1
    }
    return(result_df)
    #apply(DF[, c("height", "weight")], 1, f)
  }
  
  load(file = '~/data/result_dt3_modified.RData')
  result_dt4$location = pv
  commerce_cord_ch = lapply(result_dt4$location,geocode)
  commerce_cord_ch_list = rbindlist(commerce_cord_ch)
  result_dt4 = cbind(result_dt4,commerce_cord_ch_list)
  result_dt5 = result_dt4[!is.na(lon),]
  shop_commerce = merge(shops_df,result_dt5,by = "city",allow.cartesian = TRUE)
  shop_commerce_distance = shop_commerce[,min(distance,na.rm = TRUE),by = location.x]