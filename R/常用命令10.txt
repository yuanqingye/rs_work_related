一个函数最好不要做太多事情

Goodness of fit
1Pearson X square test
a <- chisq.test(p1$counts, p=null.probs, rescale.p=TRUE, simulate.p.value=TRUE)
第一项：dist_real, 第二项：dist_theo,第三项：如果加起来不为一需要，第四项：考虑使用蒙特卡洛模拟

2Cramér–von Mises criterion
num_of_samples = 100000
y <- rgamma(num_of_samples, shape = 10, scale = 3)
res <- CramerVonMisesTwoSamples(x,y)
p-value = 1/6*exp(-res)
比较一个真实案例和模拟出来的标准分布，第四行将CM Criterior改成我们需要的p-value

3Kolmogorov-Smirnov test
num_of_samples = 100000
y <- rgamma(num_of_samples, shape = 10, scale = 3)
result = ks.test(x, y)

Using table to build a contingency table, then chisq.test(tbl) 

Rmarkdown
https://www.cnblogs.com/nxld/p/6074412.html
eval: (TRUE; 逻辑)：是否执行代码
tidy: (TRUE; 逻辑)：是否整理代码
prompt: (FALSE; 逻辑)：是否添加引导符’>‘
highlight: (TRUE; 字符)：是否高亮代码
size: (’normalsize’; 字符)：大小 background: (‘#F7F7F7’; 字符或数值)：背景颜色
comment: (‘##’; 字符)：结果输出前缀符号
echo: (TRUE; 逻辑或数值)：是否输出代码或输出哪些行
results: (‘markup’; 字符): 装裱输出(‘markup’)、原样输出(‘asis’)、隐藏(‘hide’)
warning, error, message: (TRUE; 逻辑)：是否显示相应信息
split: (FALSE; 逻辑)：是否剥离代码和文本到外部文件
include: (TRUE; 逻辑)：是否保留代码或结果到最终文档

ggplot
scale_x_date(date_breaks = "1 month", date_labels =  "%b %Y") 
theme(axis.text.x=element_text(angle=60, hjust=1))

Columns to merge on can be specified by name, number or by a logical vector: the name "row.names" or the number 0 specifies the row names. If specified by name it must correspond uniquely to a named column in the input.

# estimate the time 
ptm <- proc.time()
for (i in 1:50) mad(stats::runif(500))
proc.time() - ptm

# check the progress
library(plyr) 
pbar <- create_progress_bar('text')
pbar$init(k)
pbar$step()

#Pre-Compute CV folds so we can use the same ones for all models
CV_Folds <- createMultiFolds(y, k = 10, times = 5)

#Fit a Linear SVM
L_model <- train(x,y,method="svmLinear",tuneLength=5,
    trControl=trainControl(method='repeatedCV',index=CV_Folds))

#Fit a Poly SVM
P_model <- train(x,y,method="svmPoly",tuneLength=5,
    trControl=trainControl(method='repeatedCV',index=CV_Folds))

#Fit a Radial SVM
R_model <- train(x,y,method="svmRadial",tuneLength=5,
    trControl=trainControl(method='repeatedCV',index=CV_Folds))

Caret,train control object
Ok, here is my try:
boot - bootstrap
boot632 -- 0.632 bootstrap
cv -- cross-validation, probably this refers to K-fold cross-validation.
LOOCV -- leave-one-out cross validation, also known as jacknife.
LGOCV -- leave-group-out cross validation, variant of LOOCV for hierarchical data.
repeatedcv -- is probably repeated random sub-sampling validation, i.e division to train and test data is done in random way.
oob -- refers to out-of-bag estimation proposed by Breiman, which further is related to bootstrap aggregating. (The file in the link is not a ps file, but a ps.Z file, rename it and then try opening.)

前面说要把 R 的 bin 路径加入 PATH，这个路径在哪儿？如果你记不住自己的 R 装在哪儿，没关系，打开 R，输入R.home('bin')就知道了

写 R 包最好的参考莫过于 R 自身的手册 “Writing R Extensions”（下文简称 R-exts）。在 R 中打开 HTML 帮助（help.start()），就可以看见这本手册，内容很长，不过大部分都是普通用户不必关心的。我的建议如下：对新手而言，必须要了解 R 包的结构，所以 1.1.1 节和 1.1.3 节必读，而整个第 2 节可能是将来需要反复参考的（除非你记性很好）；

control <- rfeControl(functions=rfFuncs, method="cv", number=10)
# run the RFE algorithm
results <- rfe(PimaIndiansDiabetes[,1:8], PimaIndiansDiabetes[,9], sizes=c(1:8), rfeControl=control)

找到训练模型的参数系数
fit <- train(train.values ~ .,data=train.data, method='glmnet') # train.data includes all variables
#getting the coefficients of the final model
coefficients <- coef(fit$finalModel, fit$bestTune$lambda)
