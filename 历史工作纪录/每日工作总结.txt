12-12
summary: when explore sth not used, forget in a fast rate.
so
either review it shortly
or
not explore sth not used soon

learned statistics in the morning: 1.5 hours
get late in the afternoon but managed to focus on the outlier problems
takes 3.5hours or more in writing AUC,f1 score, time etc of Naive Bayes, SVM, random forest, EM

12-13
如果有算法可以自动选择最适合的变量就好了
目前caret里的varImp可以在已有变量里进行选择
mclust 可以图像化不同特征分类图(supervised:Clpair;unsupervised:plot(Mclust(X)))
mod2 <- Mclust(X, x = BIC)
summary(mod2, parameters = TRUE)
plot(mod2, what = "classification")

寻找大概理解到什么程度就可以做成这件事了

12-18
早上时间利用不太好，看书时间过长
下午开始计划很好，但是看书时间过长，好事是又深入理解了GLRT
在绘图上画时间过多，可能需要系统看下ggplot
本来决定租金定价时间达到1个半小时，但是下班后似乎动力不足

12-20
按时完成了租金模型

12-25
上午有些走神
下午勤勤恳恳，但是被一些问题困住，进展缓慢

12-27
有了明确任务后，3点后时间还是在比较好的利用，目标产生更好的收益
对于之前的一些东西的复习，很有成效

12-29
完成了周报表
完成一部分固定SQL，针对检测异常流量的
看完了一部分NOVA的内容

1-3
三点后发力，流量异常检测比较艰难的路径中又前进了一步

1-9
从结构看论文看了一部分
后续分析一个一个对照，得到一定启示

1-11
找了几个小时，发现之前的试验都是针对何亮给的样本的，做好笔记很重要

1-18
代码迭代系统很重要
再有就是写的代码要容易修改，容易重复使用，修改时不需要修改多地
代码要透明，如果实在为了方便不能做到透明，需要很清晰易见的标注
代码的编写要具有连续性

如果一个方法不对，要尽快调整
如何对SQL进行迅速Debug

验证包括，1能否跑通 2是否正确
测试使用尽量小而全的例子，真正跑使用需要的例子
函数的重要优点，减少对中间变量的大量存储空间
经常要使用的技能，还有经常要路过的道路，一定要熟悉

测试时，需很长时间才能计算出来的结果需要记录下来

不积跬步无以致千里，不积小流无以成江海

写书时，把深入的东西和比较浅的东西分开来讲

最好不要依赖自制力去做一件事情，最好用兴趣和习惯引导

面向对象编程会有助于提高编程趣味和理解能力

1-24
加入周报
每个用户的总活跃天数指标(Total Active Days per User＝TAD)

1-26
减少前面工作和善后工作的复杂度

对于上海和苏州来说，训练误差和检测误差都很大，一定有还没有发现的变量，其他城市误差不大

如果前面工作没做完，差一点，之后会很麻烦

写SQL语句，知道哪些记录有可能被拿掉，哪些会保持下来

consider if you have enough power to continue, if not then go(better to continue)

2018-03-02
今天看了关于推荐系统：图模型，隐语义模型，冷启动问题（LDA内容）
python 看到了函数，循环的一些高级操作，模块等等
并没有完成实际事情，周末有时间看下ggplot，医书，以及网站实战

今日来的较晚，考虑更早睡觉
基本看完除最后一章的python
读完林林的推荐代码

2018-03-21
若想对工作效率有更高控制力，需要更好的估计每个关键进程需要的时间

有些暂时不了解的信息，会占据大量的时间和空间，需要得到妥善的处理(R - Arcgis: arcgisbinding package;r-bridge)

2018-03-23
坚持做好一件事到最后

考虑提升阅读速度

地段，时机，趋势

乱码问题的解决
http://blog.sina.com.cn/s/blog_4b0ea3990100zp75.html
下面这个没有实际使用,仅供参考
https://blog.csdn.net/keyearth/article/details/7291906

2018-5-8：用了很多时间去debug,研究租金的时间被押后

改变过于完美的思维方式（思维方式决定很多东西）
先理清思路，再做事（先理清思路，再编程）
想清最复杂和最简单的情形

如果算法计算很长时间才能得到一个结果,记得保存中间结果

今天看以前的R笔记，看到了大概第十篇，但是后面因为持续时间比较长，且没有应用，所以效率比较低
今天下午没有制定切实可行的工作计划，看深度学习看的比较缓慢，考虑先看更常用的部分

今天完成datascience+ 里面关于卡方检验的部分
今天给黛琳评估了一下新数据的采集
今天最后一个小时，对于时间的使用是很好的

明天考虑各个模型对于时间的敏感度，以及过去竞争对手商场的引入，模型的一部分商场推另外一部分商场，可能需要今晚温习下andrew 的机器学习教程，看看具体数据往哪方面走

更有针对性地考虑特征工程问题

今天上午看完了以前R经验
下午看了算法基础以及以前的一些感悟